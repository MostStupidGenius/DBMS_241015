-- 이너 조인(내부 조인)
-- 두 테이블의 공통된 컬럼을 기준으로
-- 양쪽 테이블의 모든 행을 병합하는 가장 일반적인 조인 방식
SELECT *
FROM PLAYER;

SELECT *
FROM TEAM;

-- 이너 조인
-- SELECT 컬럼명들,...
-- FROM 테이블1 E
-- INNER JOIN 테이블2 S ON E.컬럼명1 = S.컬럼명1;
-- 각 테이블의 컬럼값이 같은 경우에 해당 컬럼을 기준으로
-- 두 테이블을 합친다.
SELECT P.PLAYER_NAME 선수이름 , T.TEAM_ID 팀아이디, T.TEAM_NAME 팀명 
FROM PLAYER P
INNER JOIN TEAM T ON P.TEAM_ID = T.TEAM_ID;

-- 실습
-- 팀 테이블과 스타디움 테이블을 조인해보자.
-- TEAM 테이블과 STADIUM 테이블을 INNER JOIN으로 합치는데
-- CREATE VIEW를 이용하여 뷰 테이블로 만들어보자.
-- VIEW_TEAM_STADIUM
-- TEAM_ID, TEAM_NAME, STADIUM_ID, STADIUM_NAME 
SELECT *
FROM TEAM;

SELECT *
FROM STADIUM s ;

--CREATE VIEW VIEW_TEAM_STADIUM AS
SELECT T.TEAM_ID, T.TEAM_NAME, S.STADIUM_ID, S.STADIUM_NAME
FROM TEAM T
INNER JOIN STADIUM S
ON T.TEAM_ID = S.HOMETEAM_ID ;
--ON T.STADIUM_ID = S.STADIUM_ID ;

-- 실습2
SELECT *
FROM SCHEDULE;
-- STADIUM_ID, STADIUM_NAME, SCHE_DATE,
-- HOMETEAM_ID, AWAYTEAM_ID
-- SCHEDULE 테이블과 STADIUM 테이블을 INNER JOIN으로
-- STADIUM_ID를 기준으로 통합
-- -> 뷰테이블로 만들기 VIEW_STADIUM_SCHE


CREATE VIEW VIEW_STADIUM_SCHE AS
SELECT ST.STADIUM_ID , ST.STADIUM_NAME , SCHE_DATE,
	SC.HOMETEAM_ID , SC.AWAYTEAM_ID
FROM SCHEDULE SC
INNER JOIN STADIUM ST ON SC.STADIUM_ID = ST.STADIUM_ID;











